<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	version="3.0">

	<display-name>Ruanwei Created Web Application</display-name>

	<!-- Root ApplicationContext -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath*:spring/applicationContext.xml
		</param-value>
	</context-param>

	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath*:log4j2.xml</param-value>
	</context-param>

	<!-- The listener inspects the contextConfigLocation parameter for ApplicationContext 
		instantiation. -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- Servlet WebApplicationContext -->
	<servlet>
		<servlet-name>springweb-web</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>
				classpath*:spring/servletContext.xml
			</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
		<async-supported>true</async-supported>
		<multipart-config>
			<max-file-size>10000</max-file-size>
		</multipart-config>
	</servlet>

	<servlet-mapping>
		<servlet-name>springweb-web</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<filter>
		<filter-name>CharacterEncoding</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<async-supported>true</async-supported>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<!-- Note that this strategy saves network bandwidth but not CPU, as the 
		full response must be computed for each request. -->
	<filter>
		<filter-name>ShallowEtagHeader</filter-name>
		<filter-class>org.springframework.web.filter.ShallowEtagHeaderFilter</filter-class>
		<async-supported>true</async-supported>
		<!-- Optional parameter that configures the filter to write weak ETags 
			<init-param> <param-name>writeWeakETag</param-name> <param-value>true</param-value> 
			</init-param> -->
	</filter>
	
	<filter>
		<filter-name>CommonsRequestLogging</filter-name>
		<filter-class>org.springframework.web.filter.CommonsRequestLoggingFilter</filter-class>
		<async-supported>true</async-supported>
		<init-param>
			<param-name>includeQueryString</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>includeClientInfo</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>includeHeaders</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>CharacterEncoding</filter-name>
		<url-pattern>*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>ASYNC</dispatcher>
	</filter-mapping>

	<filter-mapping>
		<filter-name>ShallowEtagHeader</filter-name>
		<url-pattern>*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>ASYNC</dispatcher>
	</filter-mapping>
	
	<filter-mapping>
		<filter-name>CommonsRequestLogging</filter-name>
		<url-pattern>*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>ASYNC</dispatcher>
	</filter-mapping>

	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>

	<!-- error-code(4xx/5xx)/exception-type -->
	<error-page>
		<location>/error</location>
	</error-page>
</web-app>